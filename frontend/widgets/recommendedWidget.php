<?php

namespace frontend\widgets;

use common\models\base\Rate;
use yii\base\Widget;
use frontend\models\Products;
use yii\db\Expression;
use yii\db\Query;
use Yii;

class recommendedWidget extends Widget
{
    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * Lấy ra tối đa 8 sản phẩm có chung danh mục với sản phẩm đang xem.
     * Lấy ra đánh giá trung bình của mỗi sản phẩm. Sản phẩm nào không có trong bảng Rate thì đánh giá gán bằng 0.
     * @return string|void
     * Output: array[products_same_category]; array[id_products][average_rating]
     */
    public function run()
    {
        $id = Yii::$app->request->get('id_products');

        $products = $this->findModel($id);
        $sameCate = Products::find()
            ->where(['products.id_category' => $products->id_category])
            ->andWhere(['!=', 'products.id_products', $id])
            ->orderBy(new Expression('RAND()'))
            ->limit(8)
            ->all();
        $productIds = array_column($sameCate, 'id_products');

// Lấy thông tin đánh giá trung bình từ truy vấn
        $averageRatings = Rate::find()
            ->select(['id_products', 'ROUND(AVG(rate),1) AS average_rating'])
            ->where(['id_products' => $productIds])
            ->groupBy('id_products')
            ->asArray()
            ->all();

// Tạo mảng mặc định với giá trị id_products và average_rating mặc định là 0
        $defaultRating = ['id_products' => 0, 'average_rating' => 0];

// Gán giá trị mặc định cho id_products không có trong truy vấn
        foreach ($productIds as $productId) {
            $found = false;
            foreach ($averageRatings as $averageRating) {
                if ($averageRating['id_products'] == $productId) {
                    $found = true;
                    break;
                }
            }
            if (!$found) {
                $defaultRating['id_products'] = $productId;
                $averageRatings[] = $defaultRating;
            }
        }

        return $this->render('recommendedWidget', [
            'sameCate' => $sameCate,
            'averageRatings' => $averageRatings,
        ]);
    }

    protected function findModel($id_products)
    {
        if (($model = Products::findOne(['id_products' => $id_products])) !== null) {
            return $model;
        }
    }
}